{"version":3,"file":"PostMessagePreviewSnapshots.js","sources":["../../src/editor/PostMessagePreviewSnapshots.tsx"],"sourcesContent":["import type {PreviewSnapshot} from '@repo/visual-editing-helpers'\nimport type {ClientPerspective} from '@sanity/client'\nimport {memo, useEffect, useMemo, type FC} from 'react'\nimport {\n  combineLatest,\n  debounceTime,\n  filter,\n  map,\n  merge,\n  NEVER,\n  share,\n  skipWhile,\n  Subject,\n  switchMap,\n  takeUntil,\n} from 'rxjs'\nimport {getDraftId, getPublishedId} from 'sanity'\nimport {useDocumentPreviewStore, useSchema, type PreviewValue} from '../internals'\nimport type {VisualEditingConnection} from '../types'\n\ntype Ref = {\n  _id: string\n  _type: string\n}\n\nexport interface PostMessagePreviewsProps {\n  comlink: VisualEditingConnection\n  perspective: ClientPerspective\n  refs: Ref[]\n}\n\nconst PostMessagePreviews: FC<PostMessagePreviewsProps> = (props) => {\n  const {comlink, refs, perspective} = props\n  const documentPreviewStore = useDocumentPreviewStore()\n  const schema = useSchema()\n\n  const refsSubject = useMemo(() => new Subject<Ref[]>(), [])\n\n  const previews$ = useMemo(() => {\n    return refsSubject.asObservable().pipe(\n      switchMap((refs) => {\n        return combineLatest(\n          refs.map((ref) => {\n            const draftRef = {...ref, _id: getDraftId(ref._id)}\n            const draft$ =\n              perspective === 'previewDrafts'\n                ? documentPreviewStore\n                    .observeForPreview(draftRef, schema.get(draftRef._type)!)\n                    .pipe(\n                      // Share to prevent double subscribe in the merge\n                      share(),\n                      // Don't emit if no snapshot is returned\n                      skipWhile((p) => p.snapshot === null),\n                    )\n                : // Don't emit if not displaying drafts\n                  NEVER\n\n            const publishedRef = {...ref, _id: getPublishedId(ref._id)}\n            const published$ = documentPreviewStore.observeForPreview(\n              publishedRef,\n              schema.get(publishedRef._type)!,\n            )\n\n            return merge(published$.pipe(takeUntil(draft$)), draft$).pipe(\n              filter((p) => !!p.snapshot),\n              map((p) => {\n                const snapshot = p.snapshot as PreviewValue & {\n                  _id: string\n                }\n                return {\n                  _id: getPublishedId(snapshot._id),\n                  title: snapshot.title,\n                  subtitle: snapshot.subtitle,\n                  description: snapshot.description,\n                  imageUrl: snapshot.imageUrl,\n                } as PreviewSnapshot\n              }),\n            )\n          }),\n        )\n      }),\n      debounceTime(0),\n    )\n  }, [documentPreviewStore, refsSubject, schema, perspective])\n\n  useEffect(() => {\n    const sub = previews$.subscribe((snapshots) => {\n      comlink.post({\n        type: 'presentation/preview-snapshots',\n        data: {snapshots},\n      })\n    })\n\n    return () => {\n      sub.unsubscribe()\n    }\n  }, [comlink, previews$])\n\n  useEffect(() => {\n    refsSubject.next(refs)\n  }, [refs, refsSubject])\n\n  return null\n}\n\nexport default memo(PostMessagePreviews)\n"],"names":["refs"],"mappings":";;;AA+BA,MAAM,sBAAoD,CAAC,UAAU;AAC7D,QAAA,EAAC,SAAS,MAAM,YAAW,IAAI,OAC/B,uBAAuB,wBAAwB,GAC/C,SAAS,UAET,GAAA,cAAc,QAAQ,MAAM,IAAI,QAAe,GAAG,EAAE,GAEpD,YAAY,QAAQ,MACjB,YAAY,aAAA,EAAe;AAAA,IAChC,UAAU,CAACA,UACF;AAAA,MACLA,MAAK,IAAI,CAAC,QAAQ;AACV,cAAA,WAAW,EAAC,GAAG,KAAK,KAAK,WAAW,IAAI,GAAG,EAAC,GAC5C,SACJ,gBAAgB,kBACZ,qBACG,kBAAkB,UAAU,OAAO,IAAI,SAAS,KAAK,CAAE,EACvD;AAAA;AAAA,UAEC,MAAM;AAAA;AAAA,UAEN,UAAU,CAAC,MAAM,EAAE,aAAa,IAAI;AAAA,QACtC;AAAA;AAAA,UAEF;AAAA,WAEA,eAAe,EAAC,GAAG,KAAK,KAAK,eAAe,IAAI,GAAG,EAAA,GACnD,aAAa,qBAAqB;AAAA,UACtC;AAAA,UACA,OAAO,IAAI,aAAa,KAAK;AAAA,QAC/B;AAEO,eAAA,MAAM,WAAW,KAAK,UAAU,MAAM,CAAC,GAAG,MAAM,EAAE;AAAA,UACvD,OAAO,CAAC,MAAM,CAAC,CAAC,EAAE,QAAQ;AAAA,UAC1B,IAAI,CAAC,MAAM;AACT,kBAAM,WAAW,EAAE;AAGZ,mBAAA;AAAA,cACL,KAAK,eAAe,SAAS,GAAG;AAAA,cAChC,OAAO,SAAS;AAAA,cAChB,UAAU,SAAS;AAAA,cACnB,aAAa,SAAS;AAAA,cACtB,UAAU,SAAS;AAAA,YACrB;AAAA,UACD,CAAA;AAAA,QACH;AAAA,MACD,CAAA;AAAA,IAAA,CAEJ;AAAA,IACD,aAAa,CAAC;AAAA,KAEf,CAAC,sBAAsB,aAAa,QAAQ,WAAW,CAAC;AAE3D,SAAA,UAAU,MAAM;AACd,UAAM,MAAM,UAAU,UAAU,CAAC,cAAc;AAC7C,cAAQ,KAAK;AAAA,QACX,MAAM;AAAA,QACN,MAAM,EAAC,UAAS;AAAA,MAAA,CACjB;AAAA,IAAA,CACF;AAED,WAAO,MAAM;AACX,UAAI,YAAY;AAAA,IAClB;AAAA,KACC,CAAC,SAAS,SAAS,CAAC,GAEvB,UAAU,MAAM;AACd,gBAAY,KAAK,IAAI;AAAA,EACpB,GAAA,CAAC,MAAM,WAAW,CAAC,GAEf;AACT;AAEA,IAAe,8BAAA,KAAK,mBAAmB;"}